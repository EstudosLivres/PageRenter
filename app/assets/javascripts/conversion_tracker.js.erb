var protocol = 'http://';
var domain = "localhost:4000";
var conversion_checked = false;
var current_element_interacted = null;

// Function that encapsulate all the logic
function start_tracking() {
    // Create the iFrame
    var iframe = document.createElement('iframe');

    // Aux vars to create the Iframe
    var path = "<%= Rails.application.routes.url_helpers.api_conversion_tracker_path %>";
    var get_params = '?url='+document.URL;

    //setting up the iframe properties
    iframe.id = 'pagerenter';
    iframe.src = protocol + domain + path + get_params;
    // Full iFrame permissions
    iframe.sandbox = 'allow-same-origin allow-top-navigation allow-forms allow-popups allow-pointer-lock allow-scripts';

    // Hidden the iframe
    iframe.style.width = 0;
    iframe.style.height = 0;
    iframe.style.opacity = 0;

    // Append the iFrame to the beginning of the body
    document.getElementsByTagName('body')[0].appendChild(iframe);

    // Adding the events & listeners to the elements
    elements = document.querySelectorAll('[data-role^="pagerenter"]');

    // Interact with it child iframe
    window.addEventListener('message', function(event) {
        window.PageRenter = {};
        window.PageRenter.access_data = event.data;
    });

    for(var e in elements) {
        // SetUp vars
        var element = elements[e];
        add_behaviour(element);
    }
}

// Behaviour for any element, based on it tagName
function add_behaviour(element) {
    if(typeof element !== 'object') return;
    var event_str = '';

    // Add the listeners filtered by the tagName
    switch(element.tagName.toLowerCase()) {
        case 'form':
            event_str = 'submit';
            break;
        case 'input':
            if(element.type.toLowerCase() != 'submit') break;
        default:
            event_str = 'click';
            break;
    }

    element.addEventListener(event_str, behaviour);
}

// It is how the tracking work, every rule added here
function behaviour(event) {
    current_element_interacted = this;
    if(!conversion_checked) event.preventDefault();
    else return;
    var iframe = document.querySelector('iframe#pagerenter');
    var path = "<%= Rails.application.routes.url_helpers.api_conversion_register_path %>";
    var url = protocol + domain + path;

    // If the jQuery was added
    try {
        $.post(url,window.PageRenter.access_data, function(resp){
            console.log(resp);
        });
    }catch(error) {
        console.log(error);
        console.log('jQuery not added');

        access = window.PageRenter.access_data;
        var get_params = '?ad_id='+access.ad_id+'&publisher_id='+access.publisher_id+'&secret='+access.secret;

        ajax({
            url: protocol + domain + path + get_params,
            method: 'POST',
            data: window.PageRenter.access_data
        });

    }
}

// Encapsulate JS ajax
function ajax(options) {
    var http_request;

    // instantiate the http_request, if there is no window.XMLHttpRequest, so it is IE...
    if(window.XMLHttpRequest) http_request = new window.XMLHttpRequest();
    else http_request = new ActiveXObject('Microsoft.XMLHTTP');

    if ("withCredentials" in http_request) {
        // Check if the XMLHttpRequest object has a "withCredentials" property.
        // "withCredentials" only exists on XMLHTTPRequest2 objects.
        http_request.open(options.method, options.url, true);
    }else if (typeof XDomainRequest != "undefined") {
        // Otherwise, check if XDomainRequest.
        // XDomainRequest only exists in IE, and is IE's way of making CORS requests.
        http_request = new XDomainRequest();
        http_request.open(options.method, options.url);
    } else {
        // Otherwise, CORS is not supported by the browser.
        xhr = null;
    }

    // The real ajax method implementation
    http_request.onreadystatechange = function() {
        if(http_request.readyState == 4 && http_request.status == 200) console.log(http_request.responseText);
        conversion_checked = true;

        // Re-trigger it event
        element_name = current_element_interacted.localName;
        if(element_name.toUpperCase() == 'FORM') current_element_interacted.submit();
        else current_element_interacted.click();
    };

    // Send/Perform the Ajax
    http_request.send();
}

// Fire the tracking after everything is loaded
document.addEventListener('DOMContentLoaded', start_tracking);